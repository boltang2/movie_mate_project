<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="muser">
	<select id="selectOne" resultType="int"
		parameterType="vo.Movie_UserVO">
		SELECT COUNT(*) from movie_user
		WHERE movie_idx =
		#{movie_idx} AND user_idx = #{user_idx}
	</select>

	<insert id="initialize" parameterType="vo.Movie_UserVO">
		INSERT INTO movie_user
		VALUES(#{user_idx},#{movie_idx}, 0, 'no')
	</insert>

	<select id="want" resultType="String"
		parameterType="vo.Movie_UserVO">
		SELECT want_view from movie_user
		WHERE movie_idx =
		#{movie_idx} AND user_idx = #{user_idx}
	</select>

	<update id="change" parameterType="vo.Movie_UserVO">
		UPDATE movie_user SET
		want_view = #{want_view}
		WHERE
		movie_idx = #{movie_idx}
		AND user_idx =
		#{user_idx}
	</update>

	<select id="info" resultType="vo.Movie_UserVO"
		parameterType="vo.Movie_UserVO">
		SELECT * from movie_user
		WHERE movie_idx = #{movie_idx}
		AND user_idx = #{user_idx}
	</select>

	<update id="update_starScore" parameterType="vo.Movie_UserVO">
		UPDATE movie_user
		SET star_score = #{star_score}
		WHERE movie_idx = #{movie_idx}
		AND
		user_idx = #{user_idx}
	</update>

	<select id="watchList" resultType="vo.Movie_UserVO"
		parameterType="vo.Movie_UserVO">
		select * from movie_user
		where movie_idx = #{movie_idx}
		and
		star_score = #{star_score}
	</select>

	<select id="starList" resultType="vo.MyPageList_ViewVO"
		parameterType="int">
		select c.movie_idx, b.star_score, b.want_view, c.profile_img, c.title from moviemate_user a, movie_user b,
		moviemate_movie c where a.user_idx = b.user_idx AND b.movie_idx =
		c.movie_idx and a.user_idx = #{user_idx} AND b.star_score &gt; 0
	</select>

	<select id="wantList" resultType="vo.MyPageList_ViewVO"
		parameterType="int">
		select c.movie_idx, b.star_score, b.want_view, c.profile_img, c.title from moviemate_user a, movie_user b,
		moviemate_movie c where a.user_idx = b.user_idx AND b.movie_idx =
		c.movie_idx and a.user_idx = #{user_idx} AND b.want_view = 'yes'
	</select>
	
	<select id="star_scoreList" resultType="vo.StarChart_ViewVO" parameterType="vo.MovieMate_UserVO">
		SELECT star_score, COUNT(*) count FROM movie_user WHERE user_idx = #{user_idx} AND star_score > 0
		GROUP BY star_score ORDER BY star_score
	</select>

	<select id ="movieCount" resultType="int">  
		select count(*) from movie_user
            where (want_view = 'yes' and star_score = 0)
            or (want_view = 'no' and star_score > 0)
	</select>
	
	<select id="avg" resultType="double" parameterType="vo.Movie_UserVO">
		SELECT AVG(star_score) FROM movie_user WHERE 
		movie_idx = #{movie_idx} AND star_score > 0
	</select>

</mapper>

