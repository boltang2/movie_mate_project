<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mmcast">
	<select id="openApi_count" resultType="int"
		parameterType="dao.MovieMate_CastDAO">
		SELECT COUNT(*) FROM moviemate_cast WHERE name = #{name}
	</select>
	<insert id="openApi_insert" parameterType="vo.MovieMate_CastVO">
		INSERT INTO
		moviemate_cast values (seq_cast_idx.nextVal, #{name}, #{type},
		#{profile_img})
	</insert>

	<select id="selectOne" resultType="int"
		parameterType="vo.MovieMate_CastVO">
		SELECT cast_idx FROM moviemate_cast WHERE name = #{name}
	</select>

	<select id="selectCastIdx" resultType="vo.MovieMate_CastVO"
		parameterType="vo.Movie_CastVO">
		SELECT * FROM moviemate_cast WHERE cast_idx =
		#{cast_idx}
	</select>

	<select id="search_cast" resultType="vo.MovieMate_CastVO"
		parameterType="string">
		SELECT * FROM moviemate_cast WHERE name LIKE
		'%' ||
		#{keyword} || '%'
	</select>

	<select id="actorList" resultType="vo.CastList_ViewVO"
		parameterType="vo.MovieMate_UserVO">
		SELECT mmc.name, COUNT(mmc.name) count, mmc.cast_idx,
		AVG(mu.star_score) * 20 avg FROM movie_user mu, moviemate_movie
		mmm, moviemate_cast mmc, movie_cast mc WHERE mu.movie_idx =
		mmm.movie_idx AND mc.cast_idx = mmc.cast_idx AND mc.movie_idx =
		mmm.movie_idx AND mu.user_idx = #{user_idx} AND type = 'actor'
		GROUP BY mmc.name, mmc.cast_idx HAVING ROUND(avg(mu.star_score),1) > 0 ORDER BY avg DESC
	</select>
	
	<select id="directorList" resultType="vo.CastList_ViewVO"
		parameterType="vo.MovieMate_UserVO">
		SELECT mmc.name, COUNT(mmc.name) count, mmc.cast_idx,
		AVG(mu.star_score) * 20 avg FROM movie_user mu, moviemate_movie
		mmm, moviemate_cast mmc, movie_cast mc WHERE mu.movie_idx =
		mmm.movie_idx AND mc.cast_idx = mmc.cast_idx AND mc.movie_idx =
		mmm.movie_idx AND mu.user_idx = #{user_idx} AND type = 'director'
		GROUP BY mmc.name, mmc.cast_idx HAVING ROUND(avg(mu.star_score),1) > 0 ORDER BY avg DESC
	</select>
	
	
</mapper>












